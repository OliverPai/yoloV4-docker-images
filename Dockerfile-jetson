ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.4
FROM ${BASE_IMAGE} AS builder
LABEL maintainer="SincLAB-oliverPai"

ENV DEBIAN_FRONTEND=noninteractive
RUN  sed -i s@/archive.ubuntu.com/@/mirrors.ustc.edu.cn/@g /etc/apt/sources.list \
      && apt-get clean \
      && apt-get update \
      && apt-get install --no-install-recommends --no-install-suggests -y gnupg2 ca-certificates \
            git build-essential libopencv-dev \
      && rm -rf /var/lib/apt/lists/*

# RUN git clone https://github.com/AlexeyAB/darknet.git
COPY darknet darknet

RUN cd darknet && make \
      && cp darknet /usr/local/bin \
      && cd .. && rm -rf darknet

ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.4
FROM ${BASE_IMAGE}
LABEL maintainer="SincLAB-oliverPai"

ENV DEBIAN_FRONTEND noninteractive

RUN sed -i s@/archive.ubuntu.com/@/mirrors.ustc.edu.cn/@g /etc/apt/sources.list \
      && apt-get clean \
      && apt-get update \
      && apt-get install --no-install-recommends --no-install-suggests -y libopencv-highgui-dev \
      && rm -rf /var/lib/apt/lists/*

COPY --from=builder /usr/local/bin/darknet /usr/local/bin/darknet
COPY yolo_cfg data

ENV KIND=test SRC=data/dog.jpg RES=data/res.avi 
# WORKDIR /home

ENTRYPOINT darknet detector $KIND data/coco.data data/yolov4.cfg data/yolov4.weights \
                            -dont_show -ext_output -out_filename $RES $SRC
